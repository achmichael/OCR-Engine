version: '3.8'

services:
  # OCR ML Engine API
  ocr-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ocr-ml-engine
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
      - ./results:/app/results
      - ./logs:/app/logs
      - ./temp:/app/temp
    environment:
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
    networks:
      - ocr-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: ocr-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./uploads:/app/uploads:ro
    depends_on:
      - ocr-api
    networks:
      - ocr-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis untuk caching (optional)
  redis:
    image: redis:alpine
    container_name: ocr-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - ocr-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  ocr-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
